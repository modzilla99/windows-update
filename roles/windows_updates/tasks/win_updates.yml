---
- name: Update Installation
  block:
  - name: Increment the retry count
    when: win_update is undefined or ( win_update.failed and win_update.installed_update_count == 0 )
    set_fact:
      retry_count: "{{ 0 if retry_count is undefined else retry_count | int + 1 }}"
  - name: Installing Windows Updates
    ignore_errors: true
    win_updates:
      reboot: true
      reboot_timeout: 3600
      skip_optional: "{{ updates_skip_optional }}"
      reject_list: "{{ updates_blacklist }}"
      category_names: "{{ updates_categories }}"
    register: win_update
  - name: Wait for TrustedInstaller
    when: win_update.failed_update_count is defined and win_update.failed_update_count > 0
    win_shell: |
      function Test-ProcessRunning {
        param (
          [Int]$Wait
        )

        $Timer = 0
        do {
          $Timer += 1
          Sleep $Wait
          $Processes = (Get-Process).ProcessName
        }
        until (
          $Processes -notcontains "TrustedInstaller" -and $Processes -notcontains "TiWorker" -or $Timer -eq 60
        )
        echo "Process finished on try $Timer"
      }

      Test-ProcessRunning -Wait 20
      Test-ProcessRunning -Wait 10
      Test-ProcessRunning -Wait 5
  - debug: var=win_update
  - win_reboot:
      reboot_timeout: 3600
      post_reboot_delay: 60
    when: win_update.reboot_required or win_update.failed or ( win_update.installed_update_count != win_update.found_update_count )
    failed_when: 'win_update.failed or win_update.reboot_required or ( win_update.installed_update_count != win_update.found_update_count )'
  rescue:
    - name: Retry limit exceeded, falling back...
      set_fact:
        update_successful: false
      when: retry_count | int == updates_max_retries | int 
    - when: win_update.failed or ( win_update.installed_update_count != win_update.found_update_count )
      debug:
        msg: "Not all updates installed correctly, retrying..."
    - include_tasks: win_updates.yml