---
- name: Gather Facts of all VMs in variable machines.
  when: inventory_hostname in groups['local']
  local_action:
    module: vmware_vm_info
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: False
  register: facts

- name: Create list of machines to snapshot
  when: inventory_hostname not in groups['local']
  set_fact:
    machine: "{{ hostvars['localhost']['facts']['virtual_machines'] | selectattr('guest_name','eq',vcenter_vmname) | list }}"
- name: Show machine uuid
  when: inventory_hostname not in groups['local']
  debug:
    msg: "{{ machine[0].uuid }}"
- name: Remove old VM-Snapshots
  when: inventory_hostname not in groups['local']
  local_action:
    module: vmware_guest_snapshot
    datacenter: "{{ vcenter_datacenter }}"
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: False
    uuid: "{{ machine[0].uuid }}"
    #name: "{{ vcenter_vmname }}"
    #folder: "/{{ datacenter }}/vm/"
    state: absent
    snapshot_name: "{{ snapshot_name }}"
    description: "{{ snapshot_description }}"
- name: Create new VM-Snapshots
  when: inventory_hostname not in groups['local']
  local_action:
    module: vmware_guest_snapshot
    datacenter: "{{ vcenter_datacenter }}"
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: False
    uuid: "{{ machine[0].uuid }}"
    #name: "{{ vcenter_vmname }}"
    #folder: "/{{ datacenter }}/vm/"
    state: present
    snapshot_name: "{{ snapshot_name }}"
    description: "{{ snapshot_description }}"